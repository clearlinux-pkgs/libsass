From 0fd547c0ef91af2ba3c4c3b3bca98b04a779ab29 Mon Sep 17 00:00:00 2001
From: Arzhan Kinzhalin <arzhan.i.kinzhalin@intel.com>
Date: Fri, 12 Oct 2018 12:42:02 -0700
Subject: [PATCH] Mitigate CVE-2018-11499.

Disable the error-handling code which tries to read deallocated memory.
It recovers the complete parser context to cite the problematic piece
and point specific position. However, the error itself already contains
necessary context information. Thus this workaround has little usability
impact.

Before this patch:
$ sassc test.scss
error: invalid css after "...   @debug $noop": expected "}", was ": selector-nest('.m"
        on line 2:12 of libsass/test.scss
>>     @debug $noop: selector-nest('.menu', '&hover lrgba(100, 120, 140, #5)i'
   -----------^

After this patch (note the last two lines are no longer printed):
$ sassc test.scss
error: invalid css after "...   @debug $noop": expected "}", was ": selector-nest('.m"
        on line 2:12 of libsass/test.scss

Signed-off-by: Arzhan Kinzhalin <arzhan.i.kinzhalin@intel.com>
---
 src/sass_context.cpp | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/src/sass_context.cpp b/src/sass_context.cpp
index 7a0a49ce..cca92711 100644
--- a/src/sass_context.cpp
+++ b/src/sass_context.cpp
@@ -66,6 +66,11 @@ namespace Sass {
         msg_stream << traces_to_string(e.traces, "        ");
       }
 
+/* Mitigation for CVE-2018-11499: the code below tries to restore the context of
+ * the parser which could be lost on certain conditions, such as errors when
+ * processing select-* functions. It results in attempt to read deallocated
+ * memory. See: https://github.com/sass/libsass/issues/2643 for details. */
+#if 0
       // now create the code trace (ToDo: maybe have util functions?)
       if (e.pstate.line != std::string::npos && e.pstate.column != std::string::npos) {
         size_t lines = e.pstate.line;
@@ -98,6 +103,7 @@ namespace Sass {
         msg_stream << ">> " << sanitized << "\n";
         msg_stream << "   " << marker << "^\n";
       }
+#endif /* CVE-2018-11499 mitigation. */
 
       JsonNode* json_err = json_mkobject();
       json_append_member(json_err, "status", json_mknumber(1));
-- 
2.18.0

